/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package applicantevaluation;

import java.util.ArrayList;

/**
 *
 * @author keval
 */
public class ApplicantsPanel extends javax.swing.JPanel {
    
    // implements specification 6
    
    private ArrayList<PositionApplicant> applicants;
    private int appIndex = 0;

    // implements specification 7
    /**
     * Creates new form ApplicantsPanel
     */
    public ApplicantsPanel() {
        initComponents();
    }

    public ApplicantsPanel(ArrayList<PositionApplicant> applicants) {
        initComponents();
        this.applicants = applicants;
        
        // implements specification 8
        introScore.setText("Intro to Comp Prog: " + applicants.get(0).getIntroCompProg());
        advScore.setText("Advanced Comp Prog: " + applicants.get(0).getAdvCompProg());
        analysis.setText("Consider further?: " + applicants.get(0).analyzeApplicant5());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        introScore = new javax.swing.JLabel();
        appNumber = new javax.swing.JTextField();
        forwardApp = new javax.swing.JButton();
        advScore = new javax.swing.JLabel();
        backwardApp = new javax.swing.JButton();
        analysis = new javax.swing.JLabel();

        introScore.setText("jLabel1");

        appNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        appNumber.setText("0");
        appNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appNumberActionPerformed(evt);
            }
        });

        forwardApp.setText("-->");
        forwardApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardAppActionPerformed(evt);
            }
        });

        advScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        advScore.setText("jLabel1");

        backwardApp.setText("<--");
        backwardApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backwardAppActionPerformed(evt);
            }
        });

        analysis.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        analysis.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(advScore)
                    .addComponent(analysis)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backwardApp)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(introScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(appNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forwardApp)
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(forwardApp, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backwardApp, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(introScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(advScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(analysis)
                .addContainerGap(141, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // implements specification 9
    private void appNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appNumberActionPerformed
        // TODO add your handling code here:
        appIndex = Integer.parseInt(appNumber.getText());  
        updateIndex();
    }//GEN-LAST:event_appNumberActionPerformed

    private void forwardAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardAppActionPerformed
        // TODO add your handling code here:
        appIndex++;
        updateIndex();
    }//GEN-LAST:event_forwardAppActionPerformed

    private void backwardAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backwardAppActionPerformed
        // TODO add your handling code here:
        appIndex--;
        updateIndex();
    }//GEN-LAST:event_backwardAppActionPerformed

    private void updateIndex() {
        // implements specification 10
        if (appIndex < 0) {
            appIndex = 0;
        } else if (appIndex >= applicants.size()) {
            appIndex = applicants.size() - 1;
        }
        
        introScore.setText("Intro to Comp Prog: " + applicants.get(appIndex).getIntroCompProg());
        advScore.setText("Advanced Comp Prog: " + applicants.get(appIndex).getAdvCompProg());
        analysis.setText("Consider further?: " + applicants.get(appIndex).analyzeApplicant5());

        appNumber.setText("" + appIndex);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel advScore;
    private javax.swing.JLabel analysis;
    private javax.swing.JTextField appNumber;
    private javax.swing.JButton backwardApp;
    private javax.swing.JButton forwardApp;
    private javax.swing.JLabel introScore;
    // End of variables declaration//GEN-END:variables
}
