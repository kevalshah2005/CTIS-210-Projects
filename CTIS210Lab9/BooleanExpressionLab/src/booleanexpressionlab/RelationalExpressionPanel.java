/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package booleanexpressionlab;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author rmw
 */
public class RelationalExpressionPanel extends javax.swing.JPanel {

    /**
     * Creates new form RelationalExpressionPanel
     */
    public RelationalExpressionPanel() {
        initComponents();
        updateLabel(relationalOperatorChoice1, number1Field, number2Field, result1Label);
        updateLabel(relationalOperatorChoice2, number3Field, number4Field, result2Label);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        number1Field = new javax.swing.JTextField();
        number2Field = new javax.swing.JTextField();
        relationalOperatorChoice1 = new javax.swing.JComboBox<>();
        result1Label = new javax.swing.JLabel();
        number3Field = new javax.swing.JTextField();
        relationalOperatorChoice2 = new javax.swing.JComboBox<>();
        number4Field = new javax.swing.JTextField();
        result2Label = new javax.swing.JLabel();
        expression1Label = new javax.swing.JLabel();
        expression2Label = new javax.swing.JLabel();
        logicalOperatorChoice = new javax.swing.JComboBox<>();
        logicalResult = new javax.swing.JLabel();
        notLogicalResult = new javax.swing.JLabel();

        number1Field.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        number1Field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        number1Field.setText("3.0");
        number1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                number1FieldActionPerformed(evt);
            }
        });

        number2Field.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        number2Field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        number2Field.setText("5.0");
        number2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                number2FieldActionPerformed(evt);
            }
        });

        relationalOperatorChoice1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        relationalOperatorChoice1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<", ">", "<=", ">=", "==", "!=" }));
        relationalOperatorChoice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relationalOperatorChoice1ActionPerformed(evt);
            }
        });

        result1Label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        result1Label.setText("3.0 < 5.0 is true");

        number3Field.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        number3Field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        number3Field.setText("7.5");
        number3Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                number3FieldActionPerformed(evt);
            }
        });

        relationalOperatorChoice2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        relationalOperatorChoice2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<", ">", "<=", ">=", "==", "!=" }));
        relationalOperatorChoice2.setSelectedItem(">=");
        relationalOperatorChoice2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relationalOperatorChoice2ActionPerformed(evt);
            }
        });

        number4Field.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        number4Field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        number4Field.setText("13.8");
        number4Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                number4FieldActionPerformed(evt);
            }
        });

        result2Label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        result2Label.setText("7.5 >= 13.8 is false");

        expression1Label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        expression1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        expression1Label.setText("3.0 < 5.0");

        expression2Label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        expression2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        expression2Label.setText("7.5 >= 13.8");

        logicalOperatorChoice.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        logicalOperatorChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "&&", "||" }));
        logicalOperatorChoice.setSelectedItem("&&");
        logicalOperatorChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logicalOperatorChoiceActionPerformed(evt);
            }
        });

        logicalResult.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        logicalResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logicalResult.setText("(3.0 < 5.0) && (7.5 >= 13.8) is false");

        notLogicalResult.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        notLogicalResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notLogicalResult.setText("![(3.0 < 5.0) && (7.5 >= 13.8)] is true");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(result2Label))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(number3Field, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(relationalOperatorChoice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(number1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(relationalOperatorChoice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(logicalOperatorChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(number2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(number4Field, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(notLogicalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(logicalResult, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(expression1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(expression2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(result1Label)))
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(number1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(number2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(relationalOperatorChoice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(result1Label)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(number3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(number4Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(relationalOperatorChoice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(result2Label)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expression1Label)
                    .addComponent(expression2Label)
                    .addComponent(logicalOperatorChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logicalResult)
                .addGap(18, 18, 18)
                .addComponent(notLogicalResult)
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void number1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_number1FieldActionPerformed
        // TODO add your handling code here:
        result1 = updateLabel(relationalOperatorChoice1, number1Field, number2Field, result1Label);
        setLogicalText();

    }//GEN-LAST:event_number1FieldActionPerformed

    private void number2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_number2FieldActionPerformed
        // TODO add your handling code here:
        result1 = updateLabel(relationalOperatorChoice1, number1Field, number2Field, result1Label);
        setLogicalText();

    }//GEN-LAST:event_number2FieldActionPerformed

    private void relationalOperatorChoice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relationalOperatorChoice1ActionPerformed
        // TODO add your handling code here:
        result1 = updateLabel(relationalOperatorChoice1, number1Field, number2Field, result1Label);
        setLogicalText();

    }//GEN-LAST:event_relationalOperatorChoice1ActionPerformed

    private void number3FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_number3FieldActionPerformed
        // TODO add your handling code here:
        result2 = updateLabel(relationalOperatorChoice2, number3Field, number4Field, result2Label);
        setLogicalText();

    }//GEN-LAST:event_number3FieldActionPerformed

    private void relationalOperatorChoice2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relationalOperatorChoice2ActionPerformed
        // TODO add your handling code here:
        result2 = updateLabel(relationalOperatorChoice2, number3Field, number4Field, result2Label);
        setLogicalText();

    }//GEN-LAST:event_relationalOperatorChoice2ActionPerformed

    private void number4FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_number4FieldActionPerformed
        // TODO add your handling code here:
        result2 = updateLabel(relationalOperatorChoice2, number3Field, number4Field, result2Label);
        setLogicalText();
    }//GEN-LAST:event_number4FieldActionPerformed

    private void logicalOperatorChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logicalOperatorChoiceActionPerformed
        // TODO add your handling code here:
        setLogicalText();

    }//GEN-LAST:event_logicalOperatorChoiceActionPerformed

    private void setLogicalText() {
        boolean result = true;
        String relationalOperator1 = (String) relationalOperatorChoice1.getSelectedItem();
        String relationalOperator2 = (String) relationalOperatorChoice2.getSelectedItem();
        String logicalOperator = (String) logicalOperatorChoice.getSelectedItem();
        switch (logicalOperatorChoice.getSelectedIndex()) {
            case 0:
                result = result1 && result2;
                break;
            case 1:
                result = result1 || result2;
                break;
            default:
                System.out.println("Shouldn't get here");
        }
        String labelText = "(" + Double.parseDouble(number1Field.getText()) + " " + relationalOperator1 + " "
                + Double.parseDouble(number2Field.getText()) + ") " + logicalOperator
                + " (" + Double.parseDouble(number3Field.getText()) + " " + relationalOperator2 + " "
                + Double.parseDouble(number4Field.getText()) + ") ";
        String notLabelText = "![" + labelText + "]";
        logicalResult.setText(labelText + " is " + result);
        notLogicalResult.setText(notLabelText + " is " + !result);
    }

    private boolean evaluateRelation(double number1, double number2, int index) {

        boolean result = true;
        switch (index) {
            case 0:
                result = number1 < number2;
                break;
            case 1:
                result = number1 > number2;
                break;
            case 2:
                result = number1 <= number2;
                break;
            case 3:
                result = number1 >= number2;
                break;
            case 4:
                result = number1 == number2;
                break;
            case 5:
                result = number1 != number2;
                break;
            default:
                System.out.println("Shouldn't get here");
        }
        return result;

    }

    private boolean updateLabel(JComboBox operator, JTextField firstField, JTextField secondField, JLabel resultLabel) {
        int relationalOperatorIndex = operator.getSelectedIndex();
        String relationalOperator = (String) operator.getSelectedItem();

        double number1 = Double.parseDouble(firstField.getText());
        double number2 = Double.parseDouble(secondField.getText());

        boolean result = evaluateRelation(number1, number2, relationalOperatorIndex);

        String labelText = number1 + " " + relationalOperator + " " + number2 + " is " + result;
        resultLabel.setText(labelText);
        return result;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel expression1Label;
    private javax.swing.JLabel expression2Label;
    private javax.swing.JComboBox<String> logicalOperatorChoice;
    private javax.swing.JLabel logicalResult;
    private javax.swing.JLabel notLogicalResult;
    private javax.swing.JTextField number1Field;
    private javax.swing.JTextField number2Field;
    private javax.swing.JTextField number3Field;
    private javax.swing.JTextField number4Field;
    private javax.swing.JComboBox<String> relationalOperatorChoice1;
    private javax.swing.JComboBox<String> relationalOperatorChoice2;
    private javax.swing.JLabel result1Label;
    private javax.swing.JLabel result2Label;
    // End of variables declaration//GEN-END:variables

    private boolean result1 = true;
    private boolean result2 = false;
}
